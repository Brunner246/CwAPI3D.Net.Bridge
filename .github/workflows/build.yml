name: Build Solution

on:
  pull_request:
    branches: [ "master" ]

env:
  BUILD_CONFIGURATION: Release
  PLATFORM: x64
  UPLOAD_PATH: D:/a/CwAPI3D.Net.Bridge/CwAPI3D.Net.Bridge/examplelib/bin/Release
  build: '${{ github.workspace }}CwAPI3D.Net.Bridge'

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: setup-msbuild
        uses: microsoft/setup-msbuild@v2
            
        with:
          msbuild-architecture: 'x64'

      - name: BUILD SOLUTION
        run: |
          msbuild CwAPI3D.Net.Bridge.sln /p:Configuration=${{ env.BUILD_CONFIGURATION }} /p:Platform=${{ env.PLATFORM }} 

      # - name: Test
      #  run: dotnet test ./CWAPI3D_UnitTest/CWAPI3D_UnitTest.csproj --no-restore --verbosity normal

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: CwAPI3D.Net.Bridge
          path: ${{ env.UPLOAD_PATH }}

      
      - name: Initialize MSVC Code Analysis
        uses: microsoft/msvc-code-analysis-action@04825f6d9e00f87422d6bf04e1a38b1f3ed60d99
        # Provide a unique ID to access the sarif output path
        id: run-analysis
        with:
          cmakeBuildDirectory: ${{ env.build }}
          # Ruleset file that will determine what checks will be run
          ruleset: NativeRecommendedRules.ruleset

      # Upload SARIF file to GitHub Code Scanning Alerts
      - name: Upload SARIF to GitHub
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ${{ steps.run-analysis.outputs.sarif }}

      # Upload SARIF file as an Artifact to download and view
      # - name: Upload SARIF as an Artifact
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: sarif-file
      #     path: ${{ steps.run-analysis.outputs.sarif }}
